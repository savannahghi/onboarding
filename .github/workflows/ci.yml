name: Test

on: [push]

env:
  DOCKER_BUILDKIT: 1 # Enable Buildkit and let compose use it to speed up image building
  COMPOSE_DOCKER_CLI_BUILD: 1
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GOOGLE_CLOUD_PROJECT: ${{ secrets.GOOGLE_CLOUD_PROJECT }}
  GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
  FIREBASE_WEB_API_KEY: ${{ secrets.FIREBASE_WEB_API_KEY }}
  ENVIRONMENT: ${{ secrets.ENVIRONMENT }}
  ROOT_COLLECTION_SUFFIX: ${{ secrets.ROOT_COLLECTION_SUFFIX }}
  PORT: ${{ secrets.PORT }}
  REPOSITORY: ${{ secrets.REPOSITORY }}
  SERVICE_HOST: ${{ secrets.SERVICE_HOST }}
  GOOGLE_PROJECT_NUMBER: ${{ secrets.GOOGLE_PROJECT_NUMBER }}
  JWT_KEY: ${{ secrets.JWT_KEY }}
  SAVANNAH_ADMIN_EMAIL: ${{ secrets.SAVANNAH_ADMIN_EMAIL }}
  # Schema Registry CLI command version
  CLI_VERSION: v0.0.1
  #Schema Registry URL
  REGISTRY_URL: ${{ secrets.TEST_SCHEMA_REGISTRY_URL }}

concurrency:
  group: lint-and-test

jobs:
  lint_and_test:
    strategy:
      matrix:
        go-version: [1.21.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 80
    steps:
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --timeout=10m

      - name: Install Go dependencies
        run: |
          go install github.com/axw/gocov/gocov@latest
          go install github.com/securego/gosec/v2/cmd/gosec@latest
          go install github.com/ory/go-acc@latest
          go get go.opentelemetry.io/otel/metric/global@v0.27.0
         
      - uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}"
          project_id: ${{ secrets.GOOGLE_CLOUD_PROJECT }}

      - name: Run lint and test
        run: |
          go-acc -o coverage.txt --ignore generated,cmd,graph,tests,engagement,usecases  ./... -- -timeout 60m
          grep -v "generated.go" coverage.txt | grep -v "_gen.go" | grep -v "mocks.go" | grep -v "*mocks.go" | grep -v "mock.go" | grep -v "*mock.go" | grep -v "*resolvers*go" | grep -v "*.resolvers.go" | grep -v "server.go" > coverage.out
          go tool cover -html=coverage.out -o coverage.html
          gocov convert coverage.out > coverage.json
          gocov report coverage.json > coverage_report.txt
          tail coverage_report.txt

      - name: Install goveralls
        env:
          GO111MODULE: off
        run: go get github.com/mattn/goveralls
      - name: Send coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: goveralls -coverprofile=coverage.out  -service=github
