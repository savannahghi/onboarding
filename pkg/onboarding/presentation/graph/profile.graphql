extend type Query {
  # dummy query is a temporary query used to force-create a new schema version on schema registry
  dummyQuery: Boolean

  userProfile: UserProfile!

  supplierProfile: Supplier!

  resumeWithPIN(pin: String!): Boolean!

  findProvider(
    pagination: PaginationInput
    filter: [BusinessPartnerFilterInput]
    sort: [BusinessPartnerSortInput]
  ): BusinessPartnerConnection!

  findBranch(
    pagination: PaginationInput
    filter: [BranchFilterInput]
    sort: [BranchSortInput]
  ): BranchConnection!

  fetchSupplierAllowedLocations: BranchConnection!

  fetchKYCProcessingRequests: [KYCRequest]

  getAddresses: UserAddresses!

  NHIFDetails: NHIFDetails

  getUserCommunicationsSettings: UserCommunicationsSetting!
  checkSupplierKYCSubmitted: Boolean!

  fetchAdmins: [Admin]

  fetchAgents: [Agent]

  findAgentbyPhone(phoneNumber: String): Agent

  fetchUserNavigationActions: NavigationActions

  listMicroservices: [Microservice!]!
}

extend type Mutation {
  completeSignup(flavour: Flavour!): Boolean!

  updateUserProfile(input: UserProfileInput!): UserProfile!

  updateUserPIN(phone: String!, pin: String!): Boolean!

  setPrimaryPhoneNumber(phone: String!, otp: String!): Boolean!

  setPrimaryEmailAddress(email: String!, otp: String!): Boolean!

  addSecondaryPhoneNumber(phone: [String!]): Boolean!

  retireSecondaryPhoneNumbers(phones: [String!]): Boolean!

  addSecondaryEmailAddress(email: [String!]): Boolean!

  retireSecondaryEmailAddresses(emails: [String!]): Boolean!

  updateUserName(username: String!): Boolean!

  registerPushToken(token: String!): Boolean!

  addPartnerType(name: String!, partnerType: PartnerType!): Boolean!

  suspendSupplier(suspensionReason: String): Boolean!

  setUpSupplier(accountType: AccountType!): Supplier
  supplierEDILogin(
    username: String!
    password: String!
    sladeCode: String!
  ): SupplierLogin!

  supplierSetDefaultLocation(locationID: String!): Supplier!

  addIndividualRiderKYC(input: IndividualRiderInput!): IndividualRider!

  addOrganizationRiderKYC(input: OrganizationRiderInput!): OrganizationRider!

  addIndividualPractitionerKYC(
    input: IndividualPractitionerInput!
  ): IndividualPractitioner!

  addOrganizationPractitionerKYC(
    input: OrganizationPractitionerInput!
  ): OrganizationPractitioner!

  addOrganizationProviderKYC(
    input: OrganizationProviderInput!
  ): OrganizationProvider!

  addIndividualPharmaceuticalKYC(
    input: IndividualPharmaceuticalInput!
  ): IndividualPharmaceutical!

  addOrganizationPharmaceuticalKYC(
    input: OrganizationPharmaceuticalInput!
  ): OrganizationPharmaceutical!

  addIndividualCoachKYC(input: IndividualCoachInput!): IndividualCoach!

  addOrganizationCoachKYC(input: OrganizationCoachInput!): OrganizationCoach!

  addIndividualNutritionKYC(
    input: IndividualNutritionInput!
  ): IndividualNutrition!

  addOrganizationNutritionKYC(
    input: OrganizationNutritionInput!
  ): OrganizationNutrition!

  processKYCRequest(
    id: String!
    status: KYCProcessStatus!
    rejectionReason: String
  ): Boolean!

  recordPostVisitSurvey(input: PostVisitSurveyInput!): Boolean!

  retireKYCProcessingRequest: Boolean!

  setupAsExperimentParticipant(participate: Boolean): Boolean!

  addNHIFDetails(input: NHIFDetailsInput!): NHIFDetails!

  addAddress(input: UserAddressInput!, addressType: AddressType!): Address!

  setUserCommunicationsSettings(
    allowWhatsApp: Boolean
    allowTextSMS: Boolean
    allowPush: Boolean
    allowEmail: Boolean
  ): UserCommunicationsSetting!

  registerAdmin(input: RegisterAdminInput!): UserProfile!

  registerAgent(input: RegisterAgentInput!): UserProfile!

  activateAgent(agentID: String!): Boolean!

  deactivateAgent(agentID: String!): Boolean!

  saveFavoriteNavAction(title: String!): Boolean!

  deleteFavoriteNavAction(title: String!): Boolean!

  registerMicroservice(input: MicroserviceInput!): Microservice!

  deregisterMicroservice(id: String!): Boolean!

  deregisterAllMicroservices: Boolean!

  createRole(input: RoleInput!): RoleOutput!

  addPermissionsToRole(input: RolePermissionInput!): RoleOutput!
}
